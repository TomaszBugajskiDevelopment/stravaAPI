<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Chartist</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link rel="stylesheet" type="text/css" href="https://rawgit.com/gionkunz/chartist-js/master/dist/chartist.min.css">

    <style>
        .ct-chart {
            height: 300px;
            width: 100%;
        }
    </style>

</head>

<body>
    <script type="text/javascript" src="https://rawgit.com/gionkunz/chartist-js/master/dist/chartist.js"></script>

    <p>Pokonany dystans podczas twoich ostatnich aktywno≈õci: </p>
    <div class="ct-chart" id="chart1"></div>   


    <script>   
        var distance = <%-JSON.stringify(distArr)%>;
        var dates = <%-JSON.stringify(dateArr)%>;

        var data = {
            labels: dates,
            series: [distance]
        };

        var options = {
            seriesBarDistance: 0,
        };

        var chart = new Chartist.Bar('#chart1', data, options);

        var seq = 0,
            delays = 80,
            durations = 500;

        chart.on('created', function () {
            seq = 0;
        });

        chart.on('draw', function (data) {
            seq++;

            if (data.type === 'bar') {
                data.element.animate({
                    opacity: {
                        // The delay when we like to start the animation
                        begin: seq * delays + 1000,
                        // Duration of the animation
                        dur: durations,
                        // The value where the animation should start
                        from: 0,
                        // The value where it should end
                        to: 1
                    }
                });
            } else if (data.type === 'grid') {
                // Using data.axis we get x or y which we can use to construct our animation definition objects
                var pos1Animation = {
                    begin: seq * delays,
                    dur: durations,
                    from: data[data.axis.units.pos + '1'] - 30,
                    to: data[data.axis.units.pos + '1'],
                    easing: 'easeOutQuart'
                };

                var pos2Animation = {
                    begin: seq * delays,
                    dur: durations,
                    from: data[data.axis.units.pos + '2'] - 100,
                    to: data[data.axis.units.pos + '2'],
                    easing: 'easeOutQuart'
                };

                var animations = {};
                animations[data.axis.units.pos + '1'] = pos1Animation;
                animations[data.axis.units.pos + '2'] = pos2Animation;
                animations['opacity'] = {
                    begin: seq * delays,
                    dur: durations,
                    from: 0,
                    to: 1,
                    easing: 'easeOutQuart'
                };
                data.element.animate(animations);
            }
        });
        
        
    </script>

    <form action="/" method="get">
        <input type="submit" class="ghost-button" value="Back">
    </form>
</body>

</html>